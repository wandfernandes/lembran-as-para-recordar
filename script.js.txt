const pistasOriginais = [
    { charada: "üåä Um espelho d‚Äô√°gua cercado por dunas e natureza. Casais adoram remar aqui. Onde estou?", latitude: -27.5969, longitude: -48.4846, nome: "Lagoa da Concei√ß√£o", info: "A Lagoa da Concei√ß√£o √© um dos pontos tur√≠sticos mais famosos de Florian√≥polis, conhecida por suas √°guas calmas e belas paisagens." },
    { charada: "üåâ Uma ponte que une passado e presente, iluminando noites rom√¢nticas. Onde estou?", latitude: -27.5973, longitude: -48.5515, nome: "Ponte Herc√≠lio Luz", info: "A Ponte Herc√≠lio Luz √© um dos principais cart√µes-postais de Florian√≥polis, inaugurada em 1926." },
    { charada: "üèÑ‚Äç‚ôÇÔ∏è Dunas douradas onde aventureiros deslizam ao vento. Um encontro perfeito. Onde estou?", latitude: -27.6206, longitude: -48.4354, nome: "Dunas da Joaquina", info: "As Dunas da Joaquina s√£o um famoso local para a pr√°tica de sandboard em Florian√≥polis." },
    { charada: "üèñÔ∏è Um para√≠so de luxo e divers√£o onde o p√¥r do sol √© digno de aplausos. Onde estou?", latitude: -27.4368, longitude: -48.4916, nome: "Praia de Jurer√™", info: "A Praia de Jurer√™ √© conhecida por suas casas luxuosas e badaladas festas de ver√£o." },
    { charada: "üçΩÔ∏è Frutos do mar, cultura e encontros rom√¢nticos entre as mesas. Onde estou?", latitude: -27.5951, longitude: -48.5480, nome: "Mercado P√∫blico", info: "O Mercado P√∫blico de Florian√≥polis √© um √≥timo lugar para experimentar frutos do mar frescos." },
    { charada: "üåÖ No alto da ilha, uma vista que revela toda a beleza de Floripa. Onde estou?", latitude: -27.5888, longitude: -48.5350, nome: "Mirante do Morro da Cruz", info: "O Mirante do Morro da Cruz oferece uma vista panor√¢mica incr√≠vel de Florian√≥polis." }
];

let pistas = [];
let indiceAtual = 0;
let score = 0;
let avatarSelecionado = '';
let dificuldade = 'medio';

// Selecionar avatar
function selecionarAvatar(avatar) {
    avatarSelecionado = avatar;
    const avatares = document.querySelectorAll('.avatar');
    avatares.forEach(av => av.style.borderColor = 'transparent');
    avatar.style.borderColor = '#ff6f91';
}

// Iniciar jogo
function iniciarJogo() {
    if (!avatarSelecionado) {
        alert("Selecione um avatar!");
        return;
    }

    let chave = document.getElementById("chave").value.trim();
    dificuldade = document.getElementById("nivelDificuldade").value;

    if (chave === "") {
        alert("Digite uma chave v√°lida!");
        return;
    }

    pistas = embaralharPistas(chave);

    document.getElementById("inicio").style.display = "none";
    document.getElementById("pista-container").style.display = "block";
    mostrarPista();
    document.getElementById("musicaFundo").play();
    criarCora√ß√µes();
}

// Embaralhar pistas
function embaralharPistas(chave) {
    let seed = hashString(chave);
    let pistasEmbaralhadas = [...pistasOriginais];

    for (let i = pistasEmbaralhadas.length - 1; i > 0; i--) {
        let j = seed % (i + 1);
        [pistasEmbaralhadas[i], pistasEmbaralhadas[j]] = [pistasEmbaralhadas[j], pistasEmbaralhadas[i]];
        seed = (seed * 33) % 1000003;
    }

    return pistasEmbaralhadas;
}

// Hash da chave
function hashString(str) {
    let hash = 0;
    for (let i = 0; i < str.length; i++) {
        hash = (hash * 31 + str.charCodeAt(i)) % 1000003;
    }
    return hash;
}

// Mostrar pista
function mostrarPista() {
    document.getElementById("pista").textContent = pistas[indiceAtual].charada;
    document.getElementById("mensagem").textContent = `V√° at√© ${pistas[indiceAtual].nome} e clique no bot√£o abaixo!`;
    document.getElementById("info").textContent = pistas[indiceAtual].info;
    mostrarMapa(pistas[indiceAtual].latitude, pistas[indiceAtual].longitude);
}

// Tirar foto
function tirarFoto() {
    const video = document.getElementById('video');
    const constraints = {
        video: { facingMode: 'environment' }
    };

    navigator.mediaDevices.getUserMedia(constraints)
        .then((stream) => {
            video.srcObject = stream;
            video.style.display = 'block';
            document.getElementById('snap').style.display = 'block';
        })
        .catch((err) => {
            console.error('Erro ao acessar a c√¢mera: ', err);
        });
}

// Capturar foto
function capturarFoto() {
    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const context = canvas.getContext('2d');
    context.drawImage(video, 0, 0, canvas.width, canvas.height);

    desbloquearProximaPista();
    atualizarPontuacao(10); // Adiciona 10 pontos
}

// Mostrar mapa
function mostrarMapa(lat, long) {
    document.getElementById("mapa").innerHTML = `<iframe width="100%" height="300" frameborder="0"
        src="https://www.google.com/maps?q=${lat},${long}&output=embed"></iframe>`;
}

// Calcular dist√¢ncia
function calcularDistancia(lat1, lon1, lat2, lon2) {
    const R = 6371; 
    const dLat = (lat2 - lat1) * Math.PI / 180;
    const dLon = (lon2 - lon1) * Math.PI / 180;
    const a = Math.sin(dLat/2) * Math.sin(dLat/2) +
              Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
              Math.sin(dLon/2) * Math.sin(dLon/2);
    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)));
}

// Desbloquear pr√≥xima pista
function desbloquearProximaPista() {
    const somCorreto = document.getElementById("somCorreto");
    somCorreto.play();
    document.getElementById("mensagem").textContent = `Parab√©ns! Voc√™ encontrou a pr√≥xima pista!`;
    document.getElementById("mensagem").classList.add('correct');
    setTimeout(() => {
        document.getElementById("mensagem").classList.remove('correct');
    }, 1000);
    indiceAtual++;
    if (indiceAtual < pistas.length) {
        setTimeout(() => {
            mostrarPista();
            document.getElementById("mensagem").textContent = "";
        }, 3000);
    } else {
        document.getElementById("pista").textContent = "üéâ Parab√©ns! Voc√™ encontrou o tesouro rom√¢ntico! üéÅ";
        document.getElementById("mensagem").textContent = "";
        ganharMedalha("Todas as Pistas");
    }
}

// Atualizar pontua√ß√£o
function atualizarPontuacao(pontos) {
    score += pontos;
    document.getElementById("score").textContent = `Pontua√ß√£o: ${score}`;
}

// Criar cora√ß√µes animados
function criarCora√ß√µes() {
    const numCoracoes = 20;
    for (let i = 0; i < numCoracoes; i++) {
        const coracao = document.createElement('div');
        coracao.className = 'heart';
        coracao.style.left = `${Math.random() * 100}vw`;
        coracao.style.animationDuration = `${Math.random() * 5 + 5}s`;
        document.body.appendChild(coracao);
    }
}

// Exibir medalhas
function exibirMedalhas() {
    const medalhasContainer = document.getElementById('medalhas');
    medalhas.forEach(medalha => {
        const div = document.createElement('div');
        div.className = 'medalha';
        div.style.backgroundImage = `url(${medalha.imagem})`;
        medalhasContainer.appendChild(div);
    });
}

// Ganhar medalha
function ganharMedalha(nome) {
    const medalha = medalhas.find(m => m.nome === nome);
    if (medalha) {
        alert(`Voc√™ ganhou a medalha: ${medalha.nome}`);
        exibirMedalhas();
    }
}

// Inicializar medalhas
exibirMedalhas();
